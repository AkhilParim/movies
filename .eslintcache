[{"/Users/akhilparim/Documents/movies/src/index.js":"1","/Users/akhilparim/Documents/movies/src/components/App.jsx":"2","/Users/akhilparim/Documents/movies/src/components/Movie.js":"3","/Users/akhilparim/Documents/movies/src/components/NominatedCard.js":"4","/Users/akhilparim/Documents/movies/src/components/Loading.jsx":"5"},{"size":215,"mtime":1611917089661,"results":"6","hashOfConfig":"7"},{"size":6264,"mtime":1611920701310,"results":"8","hashOfConfig":"7"},{"size":1057,"mtime":1611909050549,"results":"9","hashOfConfig":"7"},{"size":612,"mtime":1610908403067,"results":"10","hashOfConfig":"7"},{"size":497,"mtime":1611920035605,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"k6jqek",{"filePath":"14","messages":"15","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/akhilparim/Documents/movies/src/index.js",[],"/Users/akhilparim/Documents/movies/src/components/App.jsx",["25","26","27","28","29","30","31","32","33","34","35","36"],"/Users/akhilparim/Documents/movies/src/components/Movie.js",["37","38","39"],"import React from 'react';\nimport Checked from \"../checked.svg\";\n\nfunction Movie(props) {\n  if(props.Type == \"movie\") {\n    return (\n      <div className={\"movie \" + (props.list.indexOf(props.imdbID) > -1 ? 'nom ' : 'nothing ') + (props.list.length >= 5 ? 'max' : 'allowed')}>\n        <div className=\"blur\">\n          <img className=\"movie-img\" src={props.Poster != \"N/A\" ? props.Poster : \"https://res.cloudinary.com/people-matters/image/upload/q_auto,f_auto/v1517845732/1517845731.jpg\"} alt={props.Title} />\n          <div className=\"movie-info\">\n            <h3>{props.Title}</h3>\n            <span className=\"year\">{props.Year}</span>\n          </div>\n        </div>\n        <div className=\"nominate-div\">\n          <button className=\"nominate-btn\" onClick={() => props.nominated(props.imdbID)}>Nominate</button>\n        </div>\n        <div className=\"nominate-disabled\">\n          <p>Max nominations reached</p>\n        </div>\n        <img src={Checked} className=\"checked\"/>\n      </div>\n    )\n  } else {\n    return null;\n  }\n}\n\n\nexport default Movie;\n",["40","41"],"/Users/akhilparim/Documents/movies/src/components/NominatedCard.js",["42"],"import React, {useEffect, useState } from 'react';\nconst API = \"https://www.omdbapi.com/?apikey=ef1a2d95&i=\"\n\nfunction NominatedCard(props) {\n  const [title, setTitle] = useState('');\n  const [year, setYear] = useState('');\n\n  fetch(API + props.movieId)\n  .then(res => res.json())\n  .then(data => {\n    setTitle(data.Title);\n    setYear(data.Year)\n  });\n\n  return (\n    <div className=\"card\">\n      <div>\n        <p>{title}</p>\n        <p>{year}</p>\n      </div>\n      <button className=\"remove\" onClick={() => props.remnominated(props.movieId)}>Remove</button>\n    </div>\n\n  )\n}\n\n\nexport default NominatedCard;\n","/Users/akhilparim/Documents/movies/src/components/Loading.jsx",[],{"ruleId":"43","severity":1,"message":"44","line":1,"column":17,"nodeType":"45","messageId":"46","endLine":1,"endColumn":26},{"ruleId":"43","severity":1,"message":"47","line":1,"column":38,"nodeType":"45","messageId":"46","endLine":1,"endColumn":47},{"ruleId":"43","severity":1,"message":"48","line":6,"column":8,"nodeType":"45","messageId":"46","endLine":6,"endColumn":13},{"ruleId":"49","severity":1,"message":"50","line":26,"column":6,"nodeType":"51","endLine":26,"endColumn":16,"suggestions":"52"},{"ruleId":"53","severity":1,"message":"54","line":107,"column":1,"nodeType":"55","messageId":"56","endLine":107,"endColumn":52},{"ruleId":"57","severity":1,"message":"58","line":112,"column":20,"nodeType":"59","messageId":"60","endLine":112,"endColumn":22},{"ruleId":"57","severity":1,"message":"58","line":158,"column":30,"nodeType":"59","messageId":"60","endLine":158,"endColumn":32},{"ruleId":"57","severity":1,"message":"58","line":161,"column":32,"nodeType":"59","messageId":"60","endLine":161,"endColumn":34},{"ruleId":"61","severity":1,"message":"62","line":164,"column":17,"nodeType":"63","endLine":164,"endColumn":60},{"ruleId":"57","severity":1,"message":"58","line":174,"column":60,"nodeType":"59","messageId":"60","endLine":174,"endColumn":62},{"ruleId":"57","severity":1,"message":"58","line":200,"column":30,"nodeType":"59","messageId":"60","endLine":200,"endColumn":32},{"ruleId":"57","severity":1,"message":"58","line":207,"column":37,"nodeType":"59","messageId":"60","endLine":207,"endColumn":39},{"ruleId":"57","severity":1,"message":"58","line":5,"column":17,"nodeType":"59","messageId":"60","endLine":5,"endColumn":19},{"ruleId":"57","severity":1,"message":"64","line":9,"column":56,"nodeType":"59","messageId":"60","endLine":9,"endColumn":58},{"ruleId":"61","severity":1,"message":"62","line":21,"column":9,"nodeType":"63","endLine":21,"endColumn":49},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"43","severity":1,"message":"44","line":1,"column":16,"nodeType":"45","messageId":"46","endLine":1,"endColumn":25},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'axios' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'list'. Either include it or remove the dependency array.","ArrayExpression",["69"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Expected '!==' and instead saw '!='.","no-native-reassign",["70"],"no-negated-in-lhs",["71"],{"desc":"72","fix":"73"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [list, selected]",{"range":"74","text":"75"},[775,785],"[list, selected]"]