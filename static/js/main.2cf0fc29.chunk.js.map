{"version":3,"sources":["checked.svg","components/Movie.js","components/NominatedCard.js","components/Loading.jsx","mov.svg","components/App.jsx","index.js"],"names":["Movie","props","Type","className","list","indexOf","imdbID","length","src","Poster","alt","Title","Year","onClick","nominated","Checked","NominatedCard","useState","title","setTitle","year","setYear","fetch","movieId","then","res","json","data","remnominated","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","Loading","class","options","height","width","EmptySearch","SearchResults","name","App","movies","setMovies","React","localStorage","getItem","JSON","parse","selected","setSelected","useEffect","setItem","stringify","LocalState","searchTerm","setSearchTerm","error","setError","handleOnSubmit","e","preventDefault","searchField","document","getElementById","value","fetchData","a","setTimeout","Search","Error","console","log","addNomination","newSelected","concat","popup","removeNomination","filter","item","Swal","fire","showDenyButton","confirmButtonText","denyButtonText","result","isConfirmed","isDenied","onSubmit","placeholder","type","id","onChange","MovieImg","map","movie","index","select","ReactDOM","render"],"mappings":"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","file":"static/js/main.2cf0fc29.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/checked.08385652.svg\";","import React from 'react';\nimport Checked from \"../checked.svg\";\n\nfunction Movie(props) {\n  if(props.Type == \"movie\") {\n    return (\n      <div className={\"movie \" + (props.list.indexOf(props.imdbID) > -1 ? 'nom ' : 'nothing ') + (props.list.length >= 5 ? 'max' : 'allowed')}>\n        <div className=\"blur\">\n          <img className=\"movie-img\" src={props.Poster != \"N/A\" ? props.Poster : \"https://res.cloudinary.com/people-matters/image/upload/q_auto,f_auto/v1517845732/1517845731.jpg\"} alt={props.Title} />\n          <div className=\"movie-info\">\n            <h3>{props.Title}</h3>\n            <span className=\"year\">{props.Year}</span>\n          </div>\n        </div>\n        <div className=\"nominate-div\">\n          <button className=\"nominate-btn\" onClick={() => props.nominated(props.imdbID)}>Nominate</button>\n        </div>\n        <div className=\"nominate-disabled\">\n          <p>Max nominations reached</p>\n        </div>\n        <img src={Checked} className=\"checked\"/>\n      </div>\n    )\n  } else {\n    return null;\n  }\n}\n\n\nexport default Movie;\n","import React, {useEffect, useState } from 'react';\nconst API = \"https://www.omdbapi.com/?apikey=ef1a2d95&i=\"\n\nfunction NominatedCard(props) {\n  const [title, setTitle] = useState('');\n  const [year, setYear] = useState('');\n\n  fetch(API + props.movieId)\n  .then(res => res.json())\n  .then(data => {\n    setTitle(data.Title);\n    setYear(data.Year)\n  });\n\n  return (\n    <div className=\"card\">\n      <div>\n        <p>{title}</p>\n        <p>{year}</p>\n      </div>\n      <button className=\"remove\" onClick={() => props.remnominated(props.movieId)}>Remove</button>\n    </div>\n\n  )\n}\n\n\nexport default NominatedCard;\n","import React from 'react';\nimport Lottie from 'react-lottie';\nimport * as loading from '../loading.json';\n\nconst defaultOptions = {\n  loop: true,\n  autoplay: true,\n  animationData: loading.default,\n  rendererSettings: {\n    preserveAspectRatio: 'xMidYMid slice'\n  }\n}\n\nconst Loading = () => {\n  return (\n    <div class=\"loading\">\n      <Lottie options={defaultOptions} height={240} width={180}/>\n      <p>Please wait while we are fetching your data..</p>\n    </div>\n  )\n}\n\nexport default Loading;\n","export default __webpack_public_path__ + \"static/media/mov.b102a297.svg\";","import React, { useEffect, useState, Component } from 'react';\nimport Movie from './Movie';\nimport NominatedCard from './NominatedCard';\nimport Loading from './Loading';\nimport Swal from 'sweetalert2';\nimport axios from \"axios\";\nimport MovieImg from '../mov.svg';\nimport \"../index.css\";\n\nconst SEARCH_API = \"https://www.omdbapi.com/?apikey=ef1a2d95&s=\"\n\nfunction EmptySearch() {\n    return <h2>Search a movie to show results..</h2>\n}\nfunction SearchResults(props) {\n    return <h2>Showing results for \"{props.name}\"</h2>\n}\nconst LocalState = list => {\n\n  const [selected, setSelected] = React.useState(\n    localStorage.getItem(list) ? JSON.parse(localStorage.getItem(list)) : []\n  );\n\n  React.useEffect(() => {\n    localStorage.setItem(list, JSON.stringify(selected));\n  }, [selected]);\n\n  // console.log(localStorage.getItem(list));\n\n  return [selected, setSelected];\n};\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [selected, setSelected] = LocalState (\n    'list'\n  );\n\n  const [searchTerm, setSearchTerm] = useState('');\n  const [error, setError] = useState('');\n\n// const handleOnSubmit = (e) => {\n//   const searchField = document.getElementById(\"search\").value;\n//   setSearchTerm(searchField);\n//\n//   if(searchField) {\n//     fetch(SEARCH_API + searchField)\n//     .then(res => res.json())\n//     .then(data => {\n//       if(typeof(data.Search) === 'undefined'){\n//         setError(data.Error);\n//       } else {\n//         setMovies(data.Search);\n//         setError('');\n//       }\n//     });\n//   // });\n//   }\n//\n//   e.preventDefault();\n// };\n\nconst handleOnSubmit = (e) => {\n  e.preventDefault();\n  const searchField = document.getElementById(\"search\").value;\n  setSearchTerm(searchField);\n  setMovies([]);\n\n  if(searchField) {\n    // fetch(SEARCH_API + searchField)\n    // .then(res => res.json())\n    // .then(data => {\n    //   if(typeof(data.Search) === 'undefined'){\n    //     setError(data.Error);\n    //   } else {\n    //     setMovies(data.Search);\n    //     setError('');\n    //   }\n    // });\n    fetchData(searchField);\n  }\n\n};\n\n  const fetchData = async (searchField) => {\n    try {\n      setTimeout(() => {\n          fetch(SEARCH_API + searchField)\n            .then(res => res.json())\n            .then(data => {\n              if(typeof(data.Search) === 'undefined'){\n                setError(data.Error);\n              } else {\n                setMovies(data.Search);\n                // console.log(movies);\n                setError('');\n              }\n            });\n      }, 500);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n\n\n{/****************  Movie Comp  *****************/}\n\nfunction addNomination(e) {\n  const newSelected = selected.concat(e);\n  setSelected(newSelected);\nif(selected.length == 4) {\n    popup();\n  }\n}\n\nfunction removeNomination(e) {\n  const newSelected = selected.filter((item) => item !== e);\n  setSelected(newSelected);\n}\n\nfunction popup() {\n   return (\n      Swal.fire({\n        title: 'Do you want to confirm the nominations?',\n        showDenyButton: true,\n        confirmButtonText: `Yes!`,\n        denyButtonText: `Edit List`,\n      }).then((result) => {\n        if (result.isConfirmed) {\n          Swal.fire('Thanks!<br>Your nominations are saved!', 'Submit another response?', 'success')\n          const newSelected = [];\n          setSelected(newSelected);\n          setMovies([]);\n          document.getElementById(\"search\").value = '';\n          setSearchTerm('');\n        } else if (result.isDenied) {\n\n        }\n      })\n   )\n }\n\n  return (\n    <>\n    <header>\n    <h1 className=\"title\">Shopify Awards</h1>\n    <form onSubmit={handleOnSubmit}>\n      <input placeholder=\"Search..\" type=\"search\" className=\"search\" id=\"search\" onChange/>\n      <button className=\"search-btn\" onClick={handleOnSubmit}>Search</button>\n    </form>\n    </header>\n\n    <div className=\"main\">\n      <div className=\"left\">\n        <div className=\"results\">\n          {searchTerm.length > 0 && <SearchResults name={searchTerm} />}\n          {searchTerm.length == 0 && <EmptySearch />}\n        </div>\n        {(() => {\n          if(searchTerm.length == 0) {\n            return (\n              <div class=\"starting-img\">\n                <img src={MovieImg} className=\"movieImg\" />\n              </div>\n            )\n          } else if(searchTerm.length > 0 && error.length > 0) {\n            return (\n                <>\n                  <p className=\"nom-inst less\">{error}</p>\n                  <p className=\"nom-inst less\">Search for another movie!</p>\n                </>\n            )\n          } else if(searchTerm.length > 0 && movies.length == 0) {\n            return (\n              <>\n                {<Loading />}\n              </>\n            )\n          } else {\n            return(\n                <div className=\"movie-container\">\n                  {searchTerm.length > 0 && movies.map((movie, index) => <Movie key={index} {...movie} nominated={addNomination} list={selected} /> )}\n                </div>\n            )\n\n\n            // return(\n            //     <div className=\"movie-container\">\n            //       {searchTerm.length > 0 && movies.map((movie, index) => <Movie key={index} {...movie} nominated={addNomination} list={selected} /> )}\n            //     </div>\n            //     )\n          }\n        })()}\n\n      </div>\n      <div className=\"right\">\n        <h2>Nominations List</h2>\n        {(() => {\n          if(selected.length == 0) {\n            return(\n              <>\n                <p className=\"nom-inst\">Movies you nominated</p>\n                <p className=\"nom-inst\">are displayed here</p>\n              </>\n            )\n          } else if(selected.length == 5){\n            return (\n              <>\n                {selected.length > 0 && selected.map((select, index) => <NominatedCard key={index} remnominated={removeNomination} movieId={select} /> )}\n                {popup}\n              </>\n            )\n          } else {\n            return (\n              <>\n                {selected.length > 0 && selected.map((select, index) => <NominatedCard key={index} remnominated={removeNomination} movieId={select} /> )}\n              </>\n            )\n          }\n        })()}\n      </div>\n    </div>\n  </>\n);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nimport App from './components/App';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}